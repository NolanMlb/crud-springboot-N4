/**
 * 
 */
package com.webservice.etude.services;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import com.webservice.etude.dto.ProduitDto;
import com.webservice.etude.enties.Categorie;
import com.webservice.etude.enties.Produit;
import com.webservice.etude.repositories.ProduitRepository;

/**
 * 
 */
@Service
public class ProduitService {

	@Autowired
	private ProduitRepository produitRepository;
	
	@Autowired
	private CategorieService categorieService;
	
	public List<Produit> recupererListeProduit(){
		return produitRepository.findAll();
	}
	
	/* Ajouter un produit */
	public Produit creationProduit(ProduitDto produitDto) {
		
		if(produitDto != null && 
				produitDto.categorieId() != null) {
			
			/* Verifier que la categorie existe dans la bd */
			Categorie categorie = categorieService.recupererCategorieParId(produitDto.categorieId());
			if(categorie != null) {
				try {
					Produit produit = new Produit();
					produit.setCategorie(categorie);
					produit.setDescription(produitDto.description());
					produit.setNom(produitDto.nom());
					produit.setPrix(produitDto.prix());
					produit.setImage(produitDto.image());
					return produitRepository.save(produit);
				} catch (Exception e) {
					System.out.println("Une erreur est survenue pendant l'ajout du produit: " + e);
				}
			}
			
		}
		
		return null;
		
	}
	
	public Produit modifierProduit(Long id, ProduitDto updatedProduit) {
	    Produit existingProduit = produitRepository.findProduitById(id);
	    System.out.println(existingProduit);
	    if(existingProduit != null) {
	        try {
		        existingProduit.setNom(updatedProduit.nom());
		        existingProduit.setPrix(updatedProduit.prix());
		        existingProduit.setDescription(updatedProduit.description());
		        existingProduit.setImage(updatedProduit.image());
		        
		        Categorie updatedCategorie = categorieService.recupererCategorieParId(updatedProduit.categorieId());
		        if(updatedCategorie != null) {
		            existingProduit.setCategorie(updatedCategorie);
		        }
		        produitRepository.save(existingProduit);
	        } catch (Exception e) {
	        	System.out.println("Une erreur est survenue lors de la modification du produit: " + e);
	        }
	    }
        return null;
    }
    
    public void deleteProduit(Long id) {
        // Handle Exception
        produitRepository.deleteById(id);
    }
}
